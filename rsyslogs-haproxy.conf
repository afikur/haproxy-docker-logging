# Create an additional socket in haproxy's chroot in order to allow logging via
# /dev/log to chroot'ed HAProxy processes
$AddUnixListenSocket /var/lib/haproxy/dev/log
#local7.*    /var/log/boot.log
# Send HAProxy messages to a dedicated logfile
#template(name="MYFORMAT" type="string" string="%msg:R,ERE,0,BLANK:[\s]([-_a-zA-Z0-9]*)--end%\n")
#template(name="LOGFILENAME" type="string" string="/var/log/haproxy/haproxy-%msg:R,ERE,0,BLANK:[\s]([-_a-zA-Z0-9]*)--end%.log")
$Template GETLOGFILENAME,"%msg:R,ERE,0,BLANK:[\s]([-_a-zA-Z0-9]*)--end%"
$Template LOGFILENAME,"/var/log/haproxy/%$.filename%.log"
#$Template LOGFILENAME2,"/var/log/haproxy/haproxy-%msg:R,ERE,0,FIELD:[\s]([-_a-zA-Z0-9]*)--end%.log"
if $programname startswith 'haproxy' then {
    set $.filename = exec_template("GETLOGFILENAME");
    #action(type="omfile" dynaFile="LOGFILENAME")
    if $.filename=='' then {
        action(type="omfile" file="/var/log/haproxy/haproxy-all.log")
    }else{
        action(type="omfile" dynaFile="LOGFILENAME")
    }
    #action(type="omfile" dynaFile="LOGFILENAME2")
    #if $syslogtag contains 'stats_haproxy_com' then {
    #    action(type="omfile" file="/var/log/haproxy/stats_haproxy_com.log" template="MYFORMAT2")
    #} else {
    #    action(type="omfile" file="/var/log/haproxy/haproxy.log" template="MYFORMAT2")
    #}
}
# :programname, startswith, "haproxy" {
#    :syslogtag, isequal, "stats_haproxy_com" {
#        /var/log/haproxy/stats_haproxy_com.log
#        stop
#    }
#    :syslogtag, isequal, 'stats-again_haproxy_com' {
#        /var/log/haproxy/stats-again_haproxy_com.log
#        stop
#    }
#    /var/log/haproxy/haproxy.log
#    stop
#}  